{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/DetailTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/DetailTask.vue","mtime":1593705323915},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7cmVxdWlyZWQsIG1pbkxlbmd0aCwgbWF4TGVuZ3RofSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGE6ICgpPT4oewogICAgICAgIHJlY29yZDoge30sCiAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIGNoaXBzOiBudWxsLAogICAgICAgIGRhdGU6IG51bGwsCiAgICAgICAgc3RhdHVzOiBudWxsLAogICAgICAgIGNoZWNrZWQ6IGZhbHNlLAogICAgICAgIGRpc2FibGVkOiBmYWxzZQogICAgfSksCiAgICB2YWxpZGF0aW9uczogewogICAgICAgIGRlc2NyaXB0aW9uOiB7bWluTGVuZ3RoOiBtaW5MZW5ndGgoMyksIG1heExlbmd0aDogbWF4TGVuZ3RoKDIwNDgpLHJlcXVpcmVkfSwKICAgICAgICBjaGVja2VkOiB7Y2hla2VkOiB2ID0+IHZ9CiAgICB9LAogICAgYXN5bmMgbW91bnRlZCgpewogICAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgICAgdGhpcy5yZWNvcmQgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZmV0Y2hSZWNvcmRCeUlkJywgaWQpCiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IHRoaXMucmVjb3JkLmRlc2NyaXB0aW9uCiAgICAgICAgaWYodGhpcy5yZWNvcmQuc3RhdHVzID09PSAnY29tcGxpdGVkJyl7CiAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlIAogICAgICAgICAgICB0aGlzLmNoZWNrZWQgPSAhdGhpcy5jaGVja2VkfQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpPT57CiAgICAgICAgICAgIHRoaXMuZGF0ZSA9IE0uRGF0ZXBpY2tlci5pbml0KHRoaXMuJHJlZnMuZGF0ZXBpY2tlciwgewogICAgICAgICAgICBmb3JtYXQ6ICdkZC5tbS55eXl5JywKICAgICAgICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKHRoaXMucmVjb3JkLmRhdGUpLAogICAgICAgICAgICBzZXREZWZhdWx0RGF0ZTogdHJ1ZQogICAgICAgICAgICB9KSAKICAgICAgICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCkKICAgICAgICAgICAgTS50ZXh0YXJlYUF1dG9SZXNpemUodGhpcy4kcmVmcy50ZXh0YXJlYSkKICAgICAgICAgICAgIH0sMCkKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgc3VibWl0SGFuZGxlcigpewogICAgICAgICAgICB0aGlzLmNoZWNrZWQgPyB0aGlzLnN0YXR1cyA9ICdjb21wbGl0ZWQnOiB0aGlzLnN0YXR1cyA9ICdhY3RpdmUnCiAgICAgICAgICAgIGlmICgodGhpcy4kdi5jaGVja2VkLiRpbnZhbGlkICYmIHRoaXMuJHYuZGVzY3JpcHRpb24uJGludmFsaWQpIHx8ICghdGhpcy4kdi5jaGVja2VkLiRpbnZhbGlkICYmIHRoaXMuJHYuZGVzY3JpcHRpb24uJGludmFsaWQpKXsKICAgICAgICAgICAgICAgIHRoaXMuJHYuJHRvdWNoKCkKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gOiB0aGlzLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cywKICAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgICAgICAgICBkYXRlOiB0aGlzLmRhdGUuZGF0ZS50b0pTT04oKSwKICAgICAgICAgICAgfSAgIAogICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlUmVjb3JkJywgZm9ybURhdGEpCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoJ9CX0LDQv9C40YHRjCDRg9GB0L/QtdGI0L3QviDQvtCx0L3QvtCy0LvQtdC90LAnKQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3Rhc2tzJykKICAgICAgICB9LAogICAgICAgIGFzeW5jIGRlbGV0ZVJlY29yZCgpewogICAgICAgICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZAogICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZGVsZXRlUmVjb3JkQnlJZCcsIGlkKQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlKCfQl9Cw0L/QuNGB0Ywg0YPRgdC/0LXRiNC90L4g0YPQtNCw0LvQtdC90LAnKQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3Rhc2tzJykKICAgICAgICB9CiAgCiAgICB9LAogICAgZGVzdHJveWVkKCl7CiAgICAgICAgaWYodGhpcy5kYXRlICYmIHRoaXMuZGF0ZS5kZXN0cm95KXsKICAgICAgICAgICAgdGhpcy5kYXRlLmRlc3Ryb3koKQogICAgICAgIH0KICAgIH0KICAgCn0K"},{"version":3,"sources":["DetailTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DetailTask.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <main class=\"app-content\">\n        <Loader v-if=\"loading\" />\n        <div class=\"app-page\" v-else>        \n            <div class=\"page-title\">\n                <h3>{{this.record.title}}</h3>\n            </div>\n            <section>\n                <div class=\"row\">\n                    <div class=\"col s12 m6\">\n                        <div  class=\"chip\" ref=\"chips\"  v-for=\" value in this.record.tags\" :key=\"value.tag\">\n                            {{value.tag}}\n                        </div>\n                        <form @submit.prevent=\"submitHandler\">\n                            <label for=\"date\">Дедлайн</label>\n                            <input  id=\"date\" type=\"text\" class=\"datepicker\" ref=\"datepicker\">\n\n                            <div class=\"input-field\">\n                                <textarea id=\"textarea1\" class=\"materialize-textarea\"\n                                    ref=\"textarea\"\n                                    v-model.trim=\"$v.description.$model\"\n                                    :class=\"{invalid: ($v.description.$dirty && !$v.description.minLength)  || ($v.description.$dirty && !$v.description.required)}\"\n                                > \n                                {{this.record.description}}\n                                </textarea>\n                                <label for=\"textarea1\">Введите описание задачи</label>\n                                <span class=\"helper-text right\"\n                                > \n                                    Кол-во символов: {{description.length}} /{{$v.description.$params.maxLength.max}} \n                                </span>\n                                <label for=\"textarea1\">Введите описание задачи</label>\n                                <span class=\"helper-text right\"\n                                > \n                                </span>\n                                <p>\n                                    <label>\n                                        <input type=\"checkbox\" class=\"filled-in\" v-model=\"checked\" :disabled=\"disabled\"/>\n                                        <span>Завершить выполнение</span>\n                                    </label>\n                                </p>\n                                <button class=\"btn waves-effect waves-light left\" type=\"submit\">\n                                    Обновить\n                                    <i class=\"material-icons right\">send</i>\n                                </button> \n                            </div>\n                        </form>\n                        <button class=\"btn waves-effect red right\" type=\"button\" @click.prevent=\"deleteRecord\" >\n                                    Удалить запись\n                                    <i class=\"material-icons right\">send</i>\n                        </button>\n                    </div>\n                </div>    \n            </section>\n        </div>\n    </main>    \n\n</template>\n\n<script>\nimport {required, minLength, maxLength} from 'vuelidate/lib/validators'\nexport default {\n    data: ()=>({\n        record: {},\n        loading: true,\n        title: '',\n        description: '',\n        chips: null,\n        date: null,\n        status: null,\n        checked: false,\n        disabled: false\n    }),\n    validations: {\n        description: {minLength: minLength(3), maxLength: maxLength(2048),required},\n        checked: {cheked: v => v}\n    },\n    async mounted(){\n        const id = this.$route.params.id\n        this.record = await this.$store.dispatch('fetchRecordById', id)\n        this.description = this.record.description\n        if(this.record.status === 'complited'){\n            this.disabled = true \n            this.checked = !this.checked}\n            setTimeout(()=>{\n            this.date = M.Datepicker.init(this.$refs.datepicker, {\n            format: 'dd.mm.yyyy',\n            defaultDate: new Date(this.record.date),\n            setDefaultDate: true\n            }) \n            M.updateTextFields()\n            M.textareaAutoResize(this.$refs.textarea)\n             },0)\n            this.loading = false\n    },\n    methods: {\n        async submitHandler(){\n            this.checked ? this.status = 'complited': this.status = 'active'\n            if ((this.$v.checked.$invalid && this.$v.description.$invalid) || (!this.$v.checked.$invalid && this.$v.description.$invalid)){\n                this.$v.$touch()\n                return\n            }\n            const formData = {\n                description : this.description,\n                status: this.status,\n                id: this.$route.params.id,\n                date: this.date.date.toJSON(),\n            }   \n            await this.$store.dispatch('updateRecord', formData)\n            this.$message('Запись успешно обновлена')\n            this.$router.push('/tasks')\n        },\n        async deleteRecord(){\n            const id = this.$route.params.id\n            await this.$store.dispatch('deleteRecordById', id)\n            this.$message('Запись успешно удалена')\n            this.$router.push('/tasks')\n        }\n  \n    },\n    destroyed(){\n        if(this.date && this.date.destroy){\n            this.date.destroy()\n        }\n    }\n   \n}\n</script>"]}]}