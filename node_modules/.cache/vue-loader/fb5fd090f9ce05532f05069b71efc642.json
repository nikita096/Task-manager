{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue","mtime":1593869103578},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUYXNrc1RhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9UYXNrc1RhYmxlJwppbXBvcnQgcGFnaW5hdGlvbk1peGluIGZyb20gJ0AvbWl4aW5zL3BhZ2luYXRpb25fbWl4aW4nCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6J3Rhc2tzJywKICAgIGRhdGE6ICgpPT4oewogICAgICAgIGxvYWRpbmc6IHRydWUsCiAgICAgICAgcmVjb3JkczogW10sCiAgICAgICAgZGF0ZTogbmV3IERhdGUoKSwKICAgICAgICBmaWx0ZXI6ICdhbGwnLAogICAgfSksCiAgICBhc3luYyBtb3VudGVkKCl7CiAgICAgICAgY29uc3QgcmVjb3JkcyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdmZXRjaFJlY29yZHMnKQogICAgICAgIHRoaXMuc2V0dXBSZWNvcmRzKHJlY29yZHMpCiAgICAgICAgTS5Gb3JtU2VsZWN0LmluaXQodGhpcy4kcmVmcy5zZWxlY3QpCiAgICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCkKICAgICAgICB0aGlzLmxvYWRpbmc9IGZhbHNlICAgICAgICAgICAKCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBkaXNwbGF5VGFza3MoKXsKICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVjb3Jkcy5maWx0ZXIodD0+ewogICAgICAgICAgICAgICAgaWYodGhpcy5maWx0ZXIgPT09ICdhbGwnKXsgcmV0dXJuIHRydWV9CiAgICAgICAgICAgICAgICByZXR1cm4gdC5VcGRhdGVTdGF0dXMgPT09IHRoaXMuZmlsdGVyCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIHNldHVwUmVjb3JkcyhyZWNvcmRzKXsKICAgICAgICAgICAgdGhpcy5yZWNvcmRzID0gcmVjb3Jkcy5tYXAocmVjb3JkID0+ewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAuLi5yZWNvcmQsCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ2xhc3M6IHJlY29yZC5zdGF0dXMgPT09ICdjb21wbGl0ZWQnID8gJ2dyZWVuJyA6IChyZWNvcmQuc3RhdHVzID09PSAnYWN0aXZlJykgJiYgKG5ldyBEYXRlKHJlY29yZC5kYXRlKSA+IHRoaXMuZGF0ZSk/ICd5ZWxsb3cnIDogJ3JlZCcsCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogIHJlY29yZC5zdGF0dXMgPT09ICdjb21wbGl0ZWQnID8gJ2NvbXBsaXRlZCcgOiAoKG5ldyBEYXRlKHJlY29yZC5kYXRlKSA+IHRoaXMuZGF0ZSkgJiYgKHJlY29yZC5zdGF0dXMgPT09ICdhY3RpdmUnKSkgPyAnYWN0aXZlJyA6ICdvdXRkYXRlZCcsCiAgICAgICAgICAgICAgICAgICAgVXBkYXRlU3RhdHVzOiByZWNvcmQuc3RhdHVzID09PSAnY29tcGxpdGVkJyA/ICdjb21wbGl0ZWQnIDogKHJlY29yZC5zdGF0dXMgPT09ICdhY3RpdmUnKSAmJiAobmV3IERhdGUocmVjb3JkLmRhdGUpID4gdGhpcy5kYXRlKT8gJ2FjdGl2ZScgOiAnb3V0ZGF0ZWQnLAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQoKICAgICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgIFRhc2tzVGFibGUKICAgIH0KfQo="},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Tasks.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <main class=\"app-content\">\n            <div class=\"app-page\">\n                <div>\n                    <div class=\"page-title\">\n                        <h3>Список задач </h3>\n                    </div>     \n                      <div class=\"row \"> \n                            <div class=\"input-field col s3\">   \n                                <select class=\"input-field\" ref=\"select\" v-model=\"filter\">\n                                    <option value=\"all\"  selected>All tasks</option>\n                                    <option value=\"active\" >Active</option>\n                                    <option value=\"complited\">Complited</option>\n                                    <option value=\"outdated\">Outdated</option>\n                                 </select>\n                                <label>Status filter</label>\n                            </div>\n                        </div>         \n                    <Loader v-if=\"loading\"/>\n                     <p class=\"center\" v-else-if=\"!records.length\">Записи отсутствуют.</p>\n                    <section v-else > \n                        <TasksTable :records=\"displayTasks\"/>\n                        <Paginate\n                            v-model=\"page\"\n                            :page-count=\"pageCount\"\n                            :click-handler=\"pageChangeHandler\"\n                            :prev-text=\"'Назад'\"\n                            :next-text=\"'Вперед'\"\n                            :container-class=\"'pagination'\"\n                            :page-class=\"'waves-effect'\"\n                        />   \n                    </section>\n                </div>\n            </div>\n    </main>\n</template>\n<script>\nimport TasksTable from '@/components/TasksTable'\nimport paginationMixin from '@/mixins/pagination_mixin'\nexport default {\n    name:'tasks',\n    data: ()=>({\n        loading: true,\n        records: [],\n        date: new Date(),\n        filter: 'all',\n    }),\n    async mounted(){\n        const records = await this.$store.dispatch('fetchRecords')\n        this.setupRecords(records)\n        M.FormSelect.init(this.$refs.select)\n        M.updateTextFields()\n        this.loading= false           \n\n    },\n    computed: {\n        displayTasks(){\n            return this.records.filter(t=>{\n                if(this.filter === 'all'){ return true}\n                return t.UpdateStatus === this.filter\n            })\n        }\n    },\n    methods:{\n        setupRecords(records){\n            this.records = records.map(record =>{\n                return {\n                    ...record,\n                    statusClass: record.status === 'complited' ? 'green' : (record.status === 'active') && (new Date(record.date) > this.date)? 'yellow' : 'red',\n                    statusText:  record.status === 'complited' ? 'complited' : ((new Date(record.date) > this.date) && (record.status === 'active')) ? 'active' : 'outdated',\n                    UpdateStatus: record.status === 'complited' ? 'complited' : (record.status === 'active') && (new Date(record.date) > this.date)? 'active' : 'outdated',\n                    \n                }\n            })\n\n        }\n    },\n    components: {\n        TasksTable\n    }\n}\n</script>"]}]}