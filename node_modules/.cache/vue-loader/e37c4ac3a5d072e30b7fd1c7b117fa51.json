{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Login.vue","mtime":1593049435462},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGh9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IG1lc3NhZ2VzIGZyb20gJ0AvdXRpbHMvbWVzc2FnZXMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnTG9naW4nLAogICAgZGF0YTooKT0+KHsKICAgICAgICBlbWFpbDogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgfSksCiAgICBtb3VudGVkKCl7CiAgICAgICAgaWYobWVzc2FnZXNbdGhpcy4kcm91dGUucXVlcnkubWVzc2FnZV0pewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlKG1lc3NhZ2VzW3RoaXMuJHJvdXRlLnF1ZXJ5Lm1lc3NhZ2VdKQogICAgICAgIH0KICAgIH0sCiAgICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBlbWFpbDoge2VtYWlsLCByZXF1aXJlZH0sCiAgICAgICAgcGFzc3dvcmQ6IHtyZXF1aXJlZCwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNil9LAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBzdWJtaXRIYW5kbGVyKCl7CiAgICAgICAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKXsKICAgICAgICAgICAgICAgIHRoaXMuJHYuJHRvdWNoKCkKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsCiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbG9naW4nLCBmb3JtRGF0YSkKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJykKICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICB9CiAgICB9LAp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n   <div class=\"grey darken-1 empty-layout\">\n        <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n            <div class=\"card-content\">\n                <span class=\"card-title\">Task manager</span>\n                <div class=\"input-field\">\n                    <input\n                        id=\"email\"\n                        type=\"text\"\n                        v-model.trim=\"$v.email.$model\"\n                        :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n                    >\n                    <label for=\"email\">Email</label>\n                    <small class=\"helper-text invalid\"\n                        v-if=\"($v.email.$dirty && !$v.email.required)\"\n                    >\n                        Поле  Email не должно быть пустым\n                    </small>\n                    <small class=\"helper-text invalid\"\n                        v-else-if=\"($v.email.$dirty && !$v.email.email)\"\n                    >\n                        Введите корректный Email\n                    </small>\n                </div>\n                <div class=\"input-field\">\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        v-model.trim=\"$v.password.$model\"\n                        :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n                    >\n                    <label for=\"password\">Пароль</label>\n                    <small class=\"helper-text invalid\"\n                        v-if=\"($v.password.$dirty && !$v.password.required)\"\n                    >\n                        Введите пароль\n                    </small>\n                    <small class=\"helper-text invalid\"\n                        v-else-if=\"($v.password.$dirty && !$v.password.minLength)\"\n                    >\n                        Пароль должен содеражть {{$v.password.$params.minLength.min}} символов. Сейчас он {{password.length}}\n                    </small>\n                </div>\n            </div>\n            <div class=\"card-action\">\n                <div>\n                    <button\n                        class=\"btn waves-effect waves-light auth-submit\"\n                        type=\"submit\"\n                    >\n                        Войти\n                        <i class=\"material-icons right\">send</i>\n                    </button>\n                </div>\n                <p class=\"center\">\n                Нет аккаунта?\n                <router-link to=\"/registration\">Зарегистрироваться</router-link>\n                </p>\n            </div>\n        </form>\n    </div>\n</template>\n<script>\nimport {email, required, minLength} from 'vuelidate/lib/validators'\nimport messages from '@/utils/messages'\n\nexport default {\n    name: 'Login',\n    data:()=>({\n        email: '',\n        password: '',\n    }),\n    mounted(){\n        if(messages[this.$route.query.message]){\n            this.$message(messages[this.$route.query.message])\n        }\n    },\n     validations: {\n        email: {email, required},\n        password: {required, minLength: minLength(6)},\n    },\n    methods: {\n        async submitHandler(){\n            if (this.$v.$invalid){\n                this.$v.$touch()\n                return\n            }\n            const formData = {\n            email: this.email,\n            password: this.password,\n            name: this.name\n            }\n            try {\n                await this.$store.dispatch('login', formData)\n                this.$router.push('/')\n            } catch (error) {}\n            \n            \n        }\n    },\n}\n</script>"]}]}