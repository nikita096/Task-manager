{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Profile.vue","mtime":1593964579266},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQge3JlcXVpcmVkfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiAoKT0+KHsKICAgIG5hbWU6ICcnCiAgfSksCiAgbW91bnRlZCgpewogICAgdGhpcy5uYW1lID0gdGhpcy5pbmZvLm5hbWUKICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICBNLnVwZGF0ZVRleHRGaWVsZHMoKQogICAgfSwgMCk7CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2luZm8nXSkKICB9LAogIHZhbGlkYXRpb25zOiB7CiAgICBuYW1lOiB7cmVxdWlyZWR9LAogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbJ3VwZGF0ZUluZm8nXSksCiAgIGFzeW5jIHN1Ym1pdEhhbmRsZXIoKXsKICAgICAgaWYodGhpcy4kdi4kaW52YWxpZCl7CiAgICAgICAgdGhpcy4kdi4kdG91Y2goKQogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy51cGRhdGVJbmZvKHsKICAgICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICAgIH0pCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7fQogICAgfQogIH0KfQo="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n      <div class=\"page-title\">\n          <h3>Профиль</h3>\n      </div>\n      <form class=\"form\" @submit.prevent=\"submitHandler\">\n          <div class=\"input-field\">\n              <input\n                  id=\"description\"\n                  type=\"text\"\n                  v-model.trim=\"name\"\n                  :class=\"{invalid: $v.name.$dirty && !$v.name.required}\"\n              >\n              <label for=\"description\">Имя</label>\n              <span \n                  v-if=\"$v.name.$dirty && !$v.name.required\"\n                  class=\"helper-text invalid\"\n              >\n                  Введите Имя\n              </span>\n          </div>\n          <button class=\"btn waves-effect waves-light\" type=\"submit\">\n              Обновить\n          <i class=\"material-icons right\">send</i>\n          </button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport {required} from 'vuelidate/lib/validators'\nexport default {\n  data: ()=>({\n    name: ''\n  }),\n  mounted(){\n    this.name = this.info.name\n    setTimeout(() => {\n      M.updateTextFields()\n    }, 0);\n  },\n  computed: {\n    ...mapGetters(['info'])\n  },\n  validations: {\n    name: {required},\n  },\n  methods: {\n    ...mapActions(['updateInfo']),\n   async submitHandler(){\n      if(this.$v.$invalid){\n        this.$v.$touch()\n        return\n      }\n      try {\n        await this.updateInfo({\n          name: this.name\n        })\n      } catch (error) {}\n    }\n  }\n}\n</script>"]}]}