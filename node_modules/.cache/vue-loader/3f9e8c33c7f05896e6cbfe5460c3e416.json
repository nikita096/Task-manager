{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Registration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Registration.vue","mtime":1592966127831},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGh9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ3JlZ2lzdHJhdGlvbicsCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIGVtYWlsOiAnJywKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgbmFtZTonJywKICAgICAgICBhZ3JlZTogJycKICAgIH0pLAogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBlbWFpbDoge2VtYWlsLCByZXF1aXJlZH0sCiAgICAgICAgcGFzc3dvcmQ6IHtyZXF1aXJlZCwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNil9LAogICAgICAgIG5hbWU6IHtyZXF1aXJlZCwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoMyl9LAogICAgICAgIGFncmVlOiB7Y2hlY2tlZDogdiA9PiB2fQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBzdWJtaXRIYW5kbGVyKCl7CiAgICAgICAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKXsKICAgICAgICAgICAgICAgIHRoaXMuJHYuJHRvdWNoKCkKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsCiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZvcm1EYXRhKQogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["Registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Registration.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    \n    <div class=\"grey darken-1 empty-layout\">\n        <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n            <div class=\"card-content\">\n                <span class=\"card-title\">Task manager</span>\n                <div class=\"input-field\">\n                    <input\n                        id=\"email\"\n                        type=\"text\"\n                        v-model.trim=\"$v.email.$model\"\n                        :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n                    >\n                    <label for=\"email\">Email</label>\n                    <small class=\"helper-text invalid\"\n                        v-if=\"($v.email.$dirty && !$v.email.required)\"\n                    >\n                        Поле  Email не должно быть пустым\n                    </small>\n                    <small class=\"helper-text invalid\"\n                        v-else-if=\"($v.email.$dirty && !$v.email.email)\"\n                    >\n                        Введите корректный Email\n                    </small>\n                </div>\n                <div class=\"input-field\">\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        v-model.trim=\"$v.password.$model\"\n                        :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n                    >\n                    <label for=\"password\">Пароль</label>\n                    <small class=\"helper-text invalid\"\n                        v-if=\"($v.password.$dirty && !$v.password.required)\"\n                    >\n                        Введите пароль\n                    </small>\n                    <small class=\"helper-text invalid\"\n                        v-else-if=\"($v.password.$dirty && !$v.password.minLength)\"\n                    >\n                        Пароль должен содеражть {{$v.password.$params.minLength.min}} символов. Сейчас он {{password.length}}\n                    </small>\n                </div>\n                <div class=\"input-field\">\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        v-model.trim=\"$v.name.$model\"\n                        :class=\"{invalid: ($v.name.$dirty && !$v.name.required) || ($v.name.$dirty && !$v.name.minLength)}\"\n                    >\n                    <label for=\"name\">Имя</label>\n                    <small class=\"helper-text invalid\"\n                        v-if=\"($v.name.$dirty && !$v.name.minLength)\"\n                    >\n                        Минимальное количество символов: {{$v.name.$params.minLength.min}}. \n                    </small>\n                </div>\n                <p>\n                    <label>\n                        <input type=\"checkbox\" v-model=\"agree\"/>\n                        <span>С правилами согласен</span>\n                    </label>\n                </p>\n            </div>\n            <div class=\"card-action\">\n                <div>\n                    <button\n                        class=\"btn waves-effect waves-light auth-submit\"\n                        type=\"submit\"\n                    > \n                        Зарегистрироваться\n                        <i class=\"material-icons right\">send</i>\n                    </button>\n                </div>\n\n                <p class=\"center\">\n                    Уже есть аккаунт?\n                    <router-link to=\"/login\">Войти!</router-link>\n                </p>\n            </div>\n        </form>\n\n    </div>\n\n</template>\n<script>\nimport {email, required, minLength} from 'vuelidate/lib/validators'\nexport default {\n    name: 'registration',\n    data: () => ({\n        email: '',\n        password: '',\n        name:'',\n        agree: ''\n    }),\n    validations: {\n        email: {email, required},\n        password: {required, minLength: minLength(6)},\n        name: {required, minLength: minLength(3)},\n        agree: {checked: v => v}\n    },\n    methods: {\n        async submitHandler(){\n            if (this.$v.$invalid){\n                this.$v.$touch()\n                return\n            }\n            const formData = {\n            email: this.email,\n            password: this.password,\n            name: this.name\n            }\n            console.log(formData)\n        }\n    },\n}\n</script>"]}]}