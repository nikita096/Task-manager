{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js!/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue","mtime":1593869103578},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25pa2l0YWJ1Z2Fldi9EZXNrdG9wL3QtbS90YXNrLW1hbmdlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uaWtpdGFidWdhZXYvRGVza3RvcC90LW0vdGFzay1tYW5nZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVGFza3NUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvVGFza3NUYWJsZSc7CmltcG9ydCBwYWdpbmF0aW9uTWl4aW4gZnJvbSAnQC9taXhpbnMvcGFnaW5hdGlvbl9taXhpbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFza3MnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICByZWNvcmRzOiBbXSwKICAgICAgZGF0ZTogbmV3IERhdGUoKSwKICAgICAgZmlsdGVyOiAnYWxsJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZWNvcmRzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnZmV0Y2hSZWNvcmRzJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVjb3JkcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIF90aGlzLnNldHVwUmVjb3JkcyhyZWNvcmRzKTsKCiAgICAgICAgICAgICAgTS5Gb3JtU2VsZWN0LmluaXQoX3RoaXMuJHJlZnMuc2VsZWN0KTsKICAgICAgICAgICAgICBNLnVwZGF0ZVRleHRGaWVsZHMoKTsKICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgZGlzcGxheVRhc2tzOiBmdW5jdGlvbiBkaXNwbGF5VGFza3MoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMucmVjb3Jkcy5maWx0ZXIoZnVuY3Rpb24gKHQpIHsKICAgICAgICBpZiAoX3RoaXMyLmZpbHRlciA9PT0gJ2FsbCcpIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHQuVXBkYXRlU3RhdHVzID09PSBfdGhpczIuZmlsdGVyOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldHVwUmVjb3JkczogZnVuY3Rpb24gc2V0dXBSZWNvcmRzKHJlY29yZHMpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnJlY29yZHMgPSByZWNvcmRzLm1hcChmdW5jdGlvbiAocmVjb3JkKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVjb3JkKSwge30sIHsKICAgICAgICAgIHN0YXR1c0NsYXNzOiByZWNvcmQuc3RhdHVzID09PSAnY29tcGxpdGVkJyA/ICdncmVlbicgOiByZWNvcmQuc3RhdHVzID09PSAnYWN0aXZlJyAmJiBuZXcgRGF0ZShyZWNvcmQuZGF0ZSkgPiBfdGhpczMuZGF0ZSA/ICd5ZWxsb3cnIDogJ3JlZCcsCiAgICAgICAgICBzdGF0dXNUZXh0OiByZWNvcmQuc3RhdHVzID09PSAnY29tcGxpdGVkJyA/ICdjb21wbGl0ZWQnIDogbmV3IERhdGUocmVjb3JkLmRhdGUpID4gX3RoaXMzLmRhdGUgJiYgcmVjb3JkLnN0YXR1cyA9PT0gJ2FjdGl2ZScgPyAnYWN0aXZlJyA6ICdvdXRkYXRlZCcsCiAgICAgICAgICBVcGRhdGVTdGF0dXM6IHJlY29yZC5zdGF0dXMgPT09ICdjb21wbGl0ZWQnID8gJ2NvbXBsaXRlZCcgOiByZWNvcmQuc3RhdHVzID09PSAnYWN0aXZlJyAmJiBuZXcgRGF0ZShyZWNvcmQuZGF0ZSkgPiBfdGhpczMuZGF0ZSA/ICdhY3RpdmUnIDogJ291dGRhdGVkJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFRhc2tzVGFibGU6IFRhc2tzVGFibGUKICB9Cn07"},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,IAAA,IAAA,EAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAAA,GAFA;AAQA,EAAA,OARA,qBAQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,CADA;;AAAA;AACA,cAAA,OADA;;AAEA,cAAA,KAAA,CAAA,YAAA,CAAA,OAAA;;AACA,cAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,cAAA,CAAA,CAAA,gBAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,KAAA,KAAA,EAAA;AAAA,iBAAA,IAAA;AAAA;;AACA,eAAA,CAAA,CAAA,YAAA,KAAA,MAAA,CAAA,MAAA;AACA,OAHA,CAAA;AAIA;AANA,GAhBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,OADA,EACA;AAAA;;AACA,WAAA,OAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,+CACA,MADA;AAEA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,KAAA,WAAA,GAAA,OAAA,GAAA,MAAA,CAAA,MAAA,KAAA,QAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,GAAA,QAAA,GAAA,KAFA;AAGA,UAAA,UAAA,EAAA,MAAA,CAAA,MAAA,KAAA,WAAA,GAAA,WAAA,GAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,MAAA,KAAA,QAAA,GAAA,QAAA,GAAA,UAHA;AAIA,UAAA,YAAA,EAAA,MAAA,CAAA,MAAA,KAAA,WAAA,GAAA,WAAA,GAAA,MAAA,CAAA,MAAA,KAAA,QAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,GAAA,QAAA,GAAA;AAJA;AAOA,OARA,CAAA;AAUA;AAZA,GAxBA;AAsCA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA;AAtCA,CAAA","sourcesContent":["<template>\n    <main class=\"app-content\">\n            <div class=\"app-page\">\n                <div>\n                    <div class=\"page-title\">\n                        <h3>Список задач </h3>\n                    </div>     \n                      <div class=\"row \"> \n                            <div class=\"input-field col s3\">   \n                                <select class=\"input-field\" ref=\"select\" v-model=\"filter\">\n                                    <option value=\"all\"  selected>All tasks</option>\n                                    <option value=\"active\" >Active</option>\n                                    <option value=\"complited\">Complited</option>\n                                    <option value=\"outdated\">Outdated</option>\n                                 </select>\n                                <label>Status filter</label>\n                            </div>\n                        </div>         \n                    <Loader v-if=\"loading\"/>\n                     <p class=\"center\" v-else-if=\"!records.length\">Записи отсутствуют.</p>\n                    <section v-else > \n                        <TasksTable :records=\"displayTasks\"/>\n                        <Paginate\n                            v-model=\"page\"\n                            :page-count=\"pageCount\"\n                            :click-handler=\"pageChangeHandler\"\n                            :prev-text=\"'Назад'\"\n                            :next-text=\"'Вперед'\"\n                            :container-class=\"'pagination'\"\n                            :page-class=\"'waves-effect'\"\n                        />   \n                    </section>\n                </div>\n            </div>\n    </main>\n</template>\n<script>\nimport TasksTable from '@/components/TasksTable'\nimport paginationMixin from '@/mixins/pagination_mixin'\nexport default {\n    name:'tasks',\n    data: ()=>({\n        loading: true,\n        records: [],\n        date: new Date(),\n        filter: 'all',\n    }),\n    async mounted(){\n        const records = await this.$store.dispatch('fetchRecords')\n        this.setupRecords(records)\n        M.FormSelect.init(this.$refs.select)\n        M.updateTextFields()\n        this.loading= false           \n\n    },\n    computed: {\n        displayTasks(){\n            return this.records.filter(t=>{\n                if(this.filter === 'all'){ return true}\n                return t.UpdateStatus === this.filter\n            })\n        }\n    },\n    methods:{\n        setupRecords(records){\n            this.records = records.map(record =>{\n                return {\n                    ...record,\n                    statusClass: record.status === 'complited' ? 'green' : (record.status === 'active') && (new Date(record.date) > this.date)? 'yellow' : 'red',\n                    statusText:  record.status === 'complited' ? 'complited' : ((new Date(record.date) > this.date) && (record.status === 'active')) ? 'active' : 'outdated',\n                    UpdateStatus: record.status === 'complited' ? 'complited' : (record.status === 'active') && (new Date(record.date) > this.date)? 'active' : 'outdated',\n                    \n                }\n            })\n\n        }\n    },\n    components: {\n        TasksTable\n    }\n}\n</script>"],"sourceRoot":"src/views"}]}