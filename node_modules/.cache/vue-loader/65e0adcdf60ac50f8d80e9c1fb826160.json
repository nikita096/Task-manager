{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue?vue&type=style&index=0&id=5f49cac4&scoped=true&lang=css&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/Tasks.vue","mtime":1594161412692},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9hZGluZyB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB0b3A6IDUwJTsKfQo="},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA","file":"Tasks.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <div class=\"page-title\">\n            <h3>Список задач </h3>\n        </div>              \n        <Loader v-if=\"loading\" class=\"\"/>\n        <p class=\"center\" v-else-if=\"!records.length\">Записи отсутствуют.</p>\n        <section v-else> \n            <div class=\"select-width \">\n                <label for=\"filter\">Status filter</label>   \n                <select id=\"filter\" class=\"browser-default input-field \" ref=\"select\" v-model=\"filter\">\n                    <option value=\"all\"  selected>All tasks</option>\n                    <option value=\"active\" >Active</option>\n                    <option value=\"complited\">Complited</option>\n                    <option value=\"outdated\">Outdated</option>\n                </select>\n            </div>\n            <div v-if=\"displayTasks\">\n            <TasksTable :records=\"displayTasks\"/>\n            <Paginate\n                v-model=\"page\"\n                :page-count=\"pageCount\"\n                :click-handler=\"pageChangeHandler\"\n                :prev-text=\"'Назад'\"\n                :next-text=\"'Вперед'\"\n                :container-class=\"'pagination'\"\n                :page-class=\"'waves-effect'\"\n            />  \n            </div>\n            <p class=\"center\" v-else>Записи отсутствуют.</p>\n        </section>\n    </div>\n</template>\n<script>\nimport TasksTable from '@/components/TasksTable'\nimport paginationMixin from '@/mixins/pagination_mixin'\nexport default {\n    name:'tasks',\n    metaInfo: {\n      title: 'Просмотр задач | Никита TM'\n    },\n    mixins: [paginationMixin],\n    data: ()=>({\n        loading: true,\n        records: [],\n        date: new Date(),\n        filter: 'all',\n    }),\n    async mounted(){\n        const records = await this.$store.dispatch('fetchRecords')\n        this.setupRecords(records)\n        setTimeout(() => {\n            M.FormSelect.init(this.$refs.select)\n            M.updateTextFields()\n        }, 0);\n        // this.loading= false           \n\n    },\n    computed: {\n        displayTasks(){\n            const filterRecords = this.records.filter( t => {\n                if(this.filter === 'all'){return true}\n                return t.UpdateStatus === this.filter\n            })\n            if(!filterRecords.length){return false}\n            this.setupPagination(filterRecords)\n            return this.items\n        }\n    },\n    methods:{\n        setupRecords(records){\n            this.records = records.map(record =>{\n                return {\n                    ...record,\n                    statusClass: record.status === 'complited' ? 'green' : (record.status === 'active') && (new Date(record.date) > this.date)? 'yellow' : 'red',\n                    statusText:  record.status === 'complited' ? 'complited' : ((new Date(record.date) > this.date) && (record.status === 'active')) ? 'active' : 'outdated',\n                    UpdateStatus: record.status === 'complited' ? 'complited' : (record.status === 'active') && (new Date(record.date) > this.date)? 'active' : 'outdated',\n                    \n                }\n            })\n\n        }\n    },\n    components: {\n        TasksTable\n    }\n}\n</script>\n<style scoped>\n    .loading {\n        position: relative;\n        top: 50%;\n    }\n</style>"]}]}