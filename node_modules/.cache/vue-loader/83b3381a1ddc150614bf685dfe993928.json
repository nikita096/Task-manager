{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/components/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/components/Navbar.vue","mtime":1594058345934},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGE6ICgpPT4oewogICAgICAgIGRyb3Bkb3duOiBudWxsLAogICAgICAgIGRhdGU6IG5ldyBEYXRlKCksCiAgICAgICAgaW50ZXJ2YWw6IG51bGwKICAgIH0pLAogICAgbW91bnRlZCgpewogICAgICAgIHRoaXMuZHJvcGRvd24gPSBNLkRyb3Bkb3duLmluaXQodGhpcy4kcmVmcy5kcm9wZG93biwge2NvbnN0cmFpbldpZHRoOiBmYWxzZSwgYWxpZ25tZW50OiAncmlnaHQnLCBpbkR1cmF0aW9uOiA1MDB9KQogICAgfSwKICAgIGJlZm9yZURlc3Ryb3koKXsKICAgICAgICBpZih0aGlzLmRyb3Bkb3duICYmIHRoaXMuZHJvcGRvd24uZGVzdHJveSl7IHRoaXMuZHJvcGRvd24uZGVzdHJveSgpfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBsb2dvdXQoKXsKICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2xvZ291dCcpCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbG9naW4/bWVzc2FnZT1sb2dvdXQnKQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIG5hbWUoKXsKICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5pbmZvLm5hbWUKICAgICAgICB9CiAgICB9Cgp9Cg=="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <nav class=\"navbar orange lighten-1 \">\n        <div class=\"nav-wrapper col s12\">\n            <div class=\"navbar-left\">\n                <a href=\"#\" @click.prevent=\"$emit('onSidebar')\">\n                    <i class=\"material-icons black-text\">dehaze</i>\n                </a>\n                <span class=\"black-text hide-on-small-and-down\">{{date | date('date')}}</span>\n            </div>\n            <ul class=\"right\">\n                <li>\n                    <a\n                        class=\"dropdown-trigger black-text\"\n                        href=\"#\"\n                        data-target=\"dropdown\"\n                        ref=\"dropdown\"\n                    >\n                    {{name}}\n                    <i class=\"material-icons right\">arrow_drop_down</i>\n                    </a>\n\n                    <ul id='dropdown' class='dropdown-content'>\n                    <li>\n                        <router-link to=\"/profile\" class=\"black-text\">\n                        <i class=\"material-icons\">account_circle</i>Профиль\n                        </router-link>\n                    </li>\n                    <li class=\"divider\" tabindex=\"-1\"></li>\n                    <li>\n                        <a href=\"#\" class=\"black-text\" @click.prevent=\"logout\">\n                        <i class=\"material-icons\">assignment_return</i>Выйти\n                        </a>\n                    </li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</template>\n<script>\nexport default {\n    data: ()=>({\n        dropdown: null,\n        date: new Date(),\n        interval: null\n    }),\n    mounted(){\n        this.dropdown = M.Dropdown.init(this.$refs.dropdown, {constrainWidth: false, alignment: 'right', inDuration: 500})\n    },\n    beforeDestroy(){\n        if(this.dropdown && this.dropdown.destroy){ this.dropdown.destroy()}\n    },\n    methods: {\n        async logout(){\n            await this.$store.dispatch('logout')\n            this.$router.push('/login?message=logout')\n        }\n    },\n    computed: {\n        name(){\n           return this.$store.getters.info.name\n        }\n    }\n\n}\n</script>"]}]}