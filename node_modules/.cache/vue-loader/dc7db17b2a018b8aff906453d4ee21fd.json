{"remainingRequest":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/DetailTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/src/views/DetailTask.vue","mtime":1594161219935},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitabugaev/Desktop/t-m/task-manger/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7cmVxdWlyZWQsIG1pbkxlbmd0aCwgbWF4TGVuZ3RofSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgICBtZXRhSW5mbzogewogICAgICB0aXRsZTogJ9Ce0L/QuNGB0LDQvdC40LUg0LfQsNC00LDRh9C4fCDQndC40LrQuNGC0LAgVE0nCiAgICB9LAogICAgZGF0YTogKCk9Pih7CiAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIGRhdGU6IG51bGwsCiAgICAgICAgY2hlY2tlZDogZmFsc2UsCiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlCiAgICB9KSwKICAgIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsncmVjb3JkJ10pLAogICAgICAgIGNoZWNrU3RhdHVzKCl7CiAgICAgICAgICAgIGlmKHRoaXMucmVjb3JkLnN0YXR1cyA9PT0gJ2NvbXBsaXRlZCcpewogICAgICAgICAgICAgICAgdGhpcy5jaGVja2VkID0gdHJ1ZQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tlZCA9IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBkZXNjcmlwdGlvbjoge21pbkxlbmd0aDogbWluTGVuZ3RoKDMpLCBtYXhMZW5ndGg6IG1heExlbmd0aCgyMDQ4KSxyZXF1aXJlZH0sCiAgICAgICAgY2hlY2tlZDoge2NoZWtlZDogdiA9PiB2fQogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoKXsKICAgICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZAogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdmZXRjaFJlY29yZEJ5SWQnLCBpZCkgIAogICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLnJlY29yZC5kZXNjcmlwdGlvbiAgCiAgICAgICAgc2V0VGltZW91dCgoKT0+ewogICAgICAgICAgICB0aGlzLmRhdGUgPSBNLkRhdGVwaWNrZXIuaW5pdCh0aGlzLiRyZWZzLmRhdGVwaWNrZXIsIHsKICAgICAgICAgICAgZm9ybWF0OiAnZGQubW0ueXl5eScsCiAgICAgICAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSh0aGlzLnJlY29yZC5kYXRlKSwKICAgICAgICAgICAgc2V0RGVmYXVsdERhdGU6IHRydWUKICAgICAgICB9KSAKICAgICAgICBNLnVwZGF0ZVRleHRGaWVsZHMoKQogICAgICAgIE0udGV4dGFyZWFBdXRvUmVzaXplKHRoaXMuJHJlZnMudGV4dGFyZWEpCiAgICAgICAgICAgIH0sMCkKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBzdWJtaXRIYW5kbGVyKCl7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrZWQgPyB0aGlzLnN0YXR1cyA9ICdjb21wbGl0ZWQnOiB0aGlzLnN0YXR1cyA9ICdhY3RpdmUnCiAgICAgICAgICAgICAgICBpZiAoKHRoaXMuJHYuY2hlY2tlZC4kaW52YWxpZCAmJiB0aGlzLiR2LmRlc2NyaXB0aW9uLiRpbnZhbGlkKSB8fCAoIXRoaXMuJHYuY2hlY2tlZC4kaW52YWxpZCAmJiB0aGlzLiR2LmRlc2NyaXB0aW9uLiRpbnZhbGlkKSl7CiAgICAgICAgICAgICAgICB0aGlzLiR2LiR0b3VjaCgpCiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uIDogdGhpcy5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLAogICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgICAgICAgICAgICAgZGF0ZTogdGhpcy5kYXRlLmRhdGUudG9KU09OKCksCiAgICAgICAgICAgICAgICB9ICAgCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlUmVjb3JkJywgZm9ybURhdGEpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKCfQl9Cw0L/QuNGB0Ywg0YPRgdC/0LXRiNC90L4g0L7QsdC90L7QstC70LXQvdCwJykKICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICAgICAgICAgCiAgICAgICAgfSwKICAgICAgICBhc3luYyBkZWxldGVSZWNvcmQoKXsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZGVsZXRlUmVjb3JkQnlJZCcsIGlkKQogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSgn0JfQsNC/0LjRgdGMINGD0YHQv9C10YjQvdC+INGD0LTQsNC70LXQvdCwJykKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvdGFza3MnKSAKICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICAgICAgICAgIAogICAgICAgIH0KICAgIH0sCiAgICBkZXN0cm95ZWQoKXsKICAgICAgICBpZih0aGlzLmRhdGUgJiYgdGhpcy5kYXRlLmRlc3Ryb3kpewogICAgICAgICAgICB0aGlzLmRhdGUuZGVzdHJveSgpCiAgICAgICAgfQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2xlYXJSZWNvcmQnKQogICAgfQp9Cg=="},{"version":3,"sources":["DetailTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DetailTask.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <Loader class=\"loader\" v-if=\"loading\" />\n        <div class=\"home-page\" v-else>        \n            <div class=\"page-title\">\n                <h3>{{this.record.title}}</h3>\n            </div>\n            <section>\n                <div  class=\"chip\"  v-for=\" value in this.record.tags\" :key=\"value.tag\">\n                    {{value.tag}}\n                </div>\n                <form @submit.prevent=\"submitHandler\">\n                    <label for=\"date\">Дедлайн</label>\n                    <input  id=\"date\" type=\"text\" class=\"datepicker\" ref=\"datepicker\">\n\n                    <div class=\"input-field\">\n                        <textarea id=\"textarea1\" class=\"materialize-textarea\"\n                            ref=\"textarea\"\n                            v-model.trim=\"$v.description.$model\"\n                            :class=\"{invalid: ($v.description.$dirty && !$v.description.minLength)  || ($v.description.$dirty && !$v.description.required)}\"\n                        > \n                        </textarea>\n                        <label for=\"textarea1\">Введите описание задачи</label>\n                        <span class=\"helper-text right\"\n                        > \n                            Кол-во символов: {{description.length}} /{{$v.description.$params.maxLength.max}} \n                        </span>\n                        <label for=\"textarea1\">Введите описание задачи</label>\n                        <span class=\"helper-text right\"\n                        > \n                        </span>\n                        <p>\n                            <label>\n                                <input type=\"checkbox\" class=\"filled-in\" v-model=\"checked\" :disabled=\"checkStatus\"/>\n                                <span>Завершить выполнение</span>\n                            </label>\n                        </p>\n                        <button class=\"btn waves-effect waves-light left\" type=\"submit\" :disabled=\"checkStatus\">\n                            Обновить\n                            <i class=\"material-icons right\">send</i>\n                        </button> \n                    </div>\n                </form>\n                <button class=\"btn waves-effect red right\" type=\"button\" @click.prevent=\"deleteRecord\" >\n                            Удалить \n                            <i class=\"material-icons right\">send</i>\n                </button>\n            </section>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {required, minLength, maxLength} from 'vuelidate/lib/validators'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n    metaInfo: {\n      title: 'Описание задачи| Никита TM'\n    },\n    data: ()=>({\n        loading: true,\n        title: '',\n        description: '',\n        date: null,\n        checked: false,\n        disabled: false\n    }),\n    computed: {\n    ...mapGetters(['record']),\n        checkStatus(){\n            if(this.record.status === 'complited'){\n                this.checked = true\n                return true\n            } else {\n                this.checked = false\n            }\n        }\n    },\n    validations: {\n        description: {minLength: minLength(3), maxLength: maxLength(2048),required},\n        checked: {cheked: v => v}\n    },\n    async mounted(){\n        const id = this.$route.params.id\n        await this.$store.dispatch('fetchRecordById', id)  \n        this.description = this.record.description  \n        setTimeout(()=>{\n            this.date = M.Datepicker.init(this.$refs.datepicker, {\n            format: 'dd.mm.yyyy',\n            defaultDate: new Date(this.record.date),\n            setDefaultDate: true\n        }) \n        M.updateTextFields()\n        M.textareaAutoResize(this.$refs.textarea)\n            },0)\n        this.loading = false\n    },\n    methods: {\n        async submitHandler(){\n            try {\n                this.checked ? this.status = 'complited': this.status = 'active'\n                if ((this.$v.checked.$invalid && this.$v.description.$invalid) || (!this.$v.checked.$invalid && this.$v.description.$invalid)){\n                this.$v.$touch()\n                return\n                }\n                const formData = {\n                    description : this.description,\n                    status: this.status,\n                    id: this.$route.params.id,\n                    date: this.date.date.toJSON(),\n                }   \n                await this.$store.dispatch('updateRecord', formData)\n                this.$message('Запись успешно обновлена')\n            } catch (error) {}\n           \n        },\n        async deleteRecord(){\n            try {\n                const id = this.$route.params.id\n                await this.$store.dispatch('deleteRecordById', id)\n                this.$message('Запись успешно удалена')\n                this.$router.push('/tasks') \n            } catch (error) {}\n            \n        }\n    },\n    destroyed(){\n        if(this.date && this.date.destroy){\n            this.date.destroy()\n        }\n        this.$store.commit('clearRecord')\n    }\n}\n</script>"]}]}